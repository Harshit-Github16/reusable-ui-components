{"version":3,"file":"checkPropTypes.js","sources":["../../../../node_modules/prop-types/checkPropTypes.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = require('./lib/has');\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n"],"names":["printWarning","process","env","NODE_ENV","ReactPropTypesSecret","require$$0","loggedTypeFailures","has","require$$1","text","message","console","error","Error","x","checkPropTypes","typeSpecs","values","location","componentName","getStack","typeSpecName","err","name","ex","stack","resetWarningCache","checkPropTypes_1"],"mappings":"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","x_google_ignoreList":[0]}