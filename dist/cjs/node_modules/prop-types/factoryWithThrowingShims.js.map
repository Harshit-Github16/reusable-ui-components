{"version":3,"file":"factoryWithThrowingShims.js","sources":["../../../../node_modules/prop-types/factoryWithThrowingShims.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n"],"names":["ReactPropTypesSecret","require$$0","emptyFunction","emptyFunctionWithReset","resetWarningCache","factoryWithThrowingShims","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","isRequired","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"mappings":";;;;;;;;;;;;;;;AASA,EAAA,IAAIA,sBAAoB,GAAGC,8BAAqC,EAAA;EAEhE,SAASC,aAAaA,GAAG;EACzB,SAASC,sBAAsBA,GAAG;EAClCA,sBAAsB,CAACC,iBAAiB,GAAGF,aAAa;EAExDG,wBAAc,GAAG,YAAW;AAC1B,IAAA,SAASC,IAAIA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,MAAM,EAAE;MAC5E,IAAIA,MAAM,KAAKZ,sBAAoB,EAAE;AACzC;AACM,QAAA;AACN;MACI,IAAIa,GAAG,GAAG,IAAIC,KAAK,CACjB,sFAAsF,GACtF,+CAA+C,GAC/C,gDACD,CAAA;MACDD,GAAG,CAACE,IAAI,GAAG,qBAAqB;AAChC,MAAA,MAAMF,GAAG;AACV;IACDP,IAAI,CAACU,UAAU,GAAGV,IAAI;IACtB,SAASW,OAAOA,GAAG;AACjB,MAAA,OAAOX,IAAI;AACZ;AACH;AACA;AACE,IAAA,IAAIY,cAAc,GAAG;AACnBC,MAAAA,KAAK,EAAEb,IAAI;AACXc,MAAAA,MAAM,EAAEd,IAAI;AACZe,MAAAA,IAAI,EAAEf,IAAI;AACVgB,MAAAA,IAAI,EAAEhB,IAAI;AACViB,MAAAA,MAAM,EAAEjB,IAAI;AACZkB,MAAAA,MAAM,EAAElB,IAAI;AACZmB,MAAAA,MAAM,EAAEnB,IAAI;AACZoB,MAAAA,MAAM,EAAEpB,IAAI;AAEZqB,MAAAA,GAAG,EAAErB,IAAI;AACTsB,MAAAA,OAAO,EAAEX,OAAO;AAChBY,MAAAA,OAAO,EAAEvB,IAAI;AACbwB,MAAAA,WAAW,EAAExB,IAAI;AACjByB,MAAAA,UAAU,EAAEd,OAAO;AACnBe,MAAAA,IAAI,EAAE1B,IAAI;AACV2B,MAAAA,QAAQ,EAAEhB,OAAO;AACjBiB,MAAAA,KAAK,EAAEjB,OAAO;AACdkB,MAAAA,SAAS,EAAElB,OAAO;AAClBmB,MAAAA,KAAK,EAAEnB,OAAO;AACdoB,MAAAA,KAAK,EAAEpB,OAAO;AAEdqB,MAAAA,cAAc,EAAEnC,sBAAsB;AACtCC,MAAAA,iBAAiB,EAAEF;KACpB;IAEDgB,cAAc,CAACqB,SAAS,GAAGrB,cAAc;AAEzC,IAAA,OAAOA,cAAc;GACtB;;;;;;","x_google_ignoreList":[0]}