{"version":3,"file":"link.js","sources":["../../../../../../node_modules/next/dist/client/link.js"],"sourcesContent":["'use client';\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    default: null,\n    useLinkStatus: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    default: function() {\n        return _default;\n    },\n    useLinkStatus: function() {\n        return useLinkStatus;\n    }\n});\nconst _interop_require_wildcard = require(\"@swc/helpers/_/_interop_require_wildcard\");\nconst _jsxruntime = require(\"react/jsx-runtime\");\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(require(\"react\"));\nconst _resolvehref = require(\"./resolve-href\");\nconst _islocalurl = require(\"../shared/lib/router/utils/is-local-url\");\nconst _formaturl = require(\"../shared/lib/router/utils/format-url\");\nconst _utils = require(\"../shared/lib/utils\");\nconst _addlocale = require(\"./add-locale\");\nconst _routercontextsharedruntime = require(\"../shared/lib/router-context.shared-runtime\");\nconst _useintersection = require(\"./use-intersection\");\nconst _getdomainlocale = require(\"./get-domain-locale\");\nconst _addbasepath = require(\"./add-base-path\");\nconst _usemergedref = require(\"./use-merged-ref\");\nconst _erroronce = require(\"../shared/lib/utils/error-once\");\nconst prefetched = new Set();\nfunction prefetch(router, href, as, options) {\n    if (typeof window === 'undefined') {\n        return;\n    }\n    if (!(0, _islocalurl.isLocalURL)(href)) {\n        return;\n    }\n    // We should only dedupe requests when experimental.optimisticClientCache is\n    // disabled.\n    if (!options.bypassPrefetchedCheck) {\n        const locale = // Let the link's locale prop override the default router locale.\n        typeof options.locale !== 'undefined' ? options.locale : 'locale' in router ? router.locale : undefined;\n        const prefetchedKey = href + '%' + as + '%' + locale;\n        // If we've already fetched the key, then don't prefetch it again!\n        if (prefetched.has(prefetchedKey)) {\n            return;\n        }\n        // Mark this URL as prefetched.\n        prefetched.add(prefetchedKey);\n    }\n    // Prefetch the JSON page if asked (only in the client)\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    router.prefetch(href, as, options).catch((err)=>{\n        if (process.env.NODE_ENV !== 'production') {\n            // rethrow to show invalid URL errors\n            throw err;\n        }\n    });\n}\nfunction isModifiedEvent(event) {\n    const eventTarget = event.currentTarget;\n    const target = eventTarget.getAttribute('target');\n    return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || // triggers resource download\n    event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale, onNavigate) {\n    const { nodeName } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === 'A';\n    if (isAnchorNodeName && isModifiedEvent(e) || e.currentTarget.hasAttribute('download')) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    if (!(0, _islocalurl.isLocalURL)(href)) {\n        if (replace) {\n            // browser default behavior does not replace the history state\n            // so we need to do it manually\n            e.preventDefault();\n            location.replace(href);\n        }\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    const navigate = ()=>{\n        if (onNavigate) {\n            let isDefaultPrevented = false;\n            onNavigate({\n                preventDefault: ()=>{\n                    isDefaultPrevented = true;\n                }\n            });\n            if (isDefaultPrevented) {\n                return;\n            }\n        }\n        // If the router is an NextRouter instance it will have `beforePopState`\n        const routerScroll = scroll != null ? scroll : true;\n        if ('beforePopState' in router) {\n            router[replace ? 'replace' : 'push'](href, as, {\n                shallow,\n                locale,\n                scroll: routerScroll\n            });\n        } else {\n            router[replace ? 'replace' : 'push'](as || href, {\n                scroll: routerScroll\n            });\n        }\n    };\n    navigate();\n}\nfunction formatStringOrUrl(urlObjOrString) {\n    if (typeof urlObjOrString === 'string') {\n        return urlObjOrString;\n    }\n    return (0, _formaturl.formatUrl)(urlObjOrString);\n}\n/**\n * A React component that extends the HTML `<a>` element to provide [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation between routes.\n *\n * It is the primary way to navigate between routes in Next.js.\n *\n * Read more: [Next.js docs: `<Link>`](https://nextjs.org/docs/app/api-reference/components/link)\n */ const Link = /*#__PURE__*/ _react.default.forwardRef(function LinkComponent(props, forwardedRef) {\n    let children;\n    const { href: hrefProp, as: asProp, children: childrenProp, prefetch: prefetchProp = null, passHref, replace, shallow, scroll, locale, onClick, onNavigate, onMouseEnter: onMouseEnterProp, onTouchStart: onTouchStartProp, legacyBehavior = false, ...restProps } = props;\n    children = childrenProp;\n    if (legacyBehavior && (typeof children === 'string' || typeof children === 'number')) {\n        children = /*#__PURE__*/ (0, _jsxruntime.jsx)(\"a\", {\n            children: children\n        });\n    }\n    const router = _react.default.useContext(_routercontextsharedruntime.RouterContext);\n    const prefetchEnabled = prefetchProp !== false;\n    if (process.env.NODE_ENV !== 'production') {\n        function createPropError(args) {\n            return Object.defineProperty(new Error(\"Failed prop type: The prop `\" + args.key + \"` expects a \" + args.expected + \" in `<Link>`, but got `\" + args.actual + \"` instead.\" + (typeof window !== 'undefined' ? \"\\nOpen your browser's console to view the Component stack trace.\" : '')), \"__NEXT_ERROR_CODE\", {\n                value: \"E319\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === 'href') {\n                if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {\n                    throw createPropError({\n                        key,\n                        expected: '`string` or `object`',\n                        actual: props[key] === null ? 'null' : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            locale: true,\n            onClick: true,\n            onMouseEnter: true,\n            onTouchStart: true,\n            legacyBehavior: true,\n            onNavigate: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === 'as') {\n                if (props[key] && valType !== 'string' && valType !== 'object') {\n                    throw createPropError({\n                        key,\n                        expected: '`string` or `object`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'locale') {\n                if (props[key] && valType !== 'string') {\n                    throw createPropError({\n                        key,\n                        expected: '`string`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'onClick' || key === 'onMouseEnter' || key === 'onTouchStart' || key === 'onNavigate') {\n                if (props[key] && valType !== 'function') {\n                    throw createPropError({\n                        key,\n                        expected: '`function`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch' || key === 'legacyBehavior') {\n                if (props[key] != null && valType !== 'boolean') {\n                    throw createPropError({\n                        key,\n                        expected: '`boolean`',\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n    }\n    const { href, as } = _react.default.useMemo(()=>{\n        if (!router) {\n            const resolvedHref = formatStringOrUrl(hrefProp);\n            return {\n                href: resolvedHref,\n                as: asProp ? formatStringOrUrl(asProp) : resolvedHref\n            };\n        }\n        const [resolvedHref, resolvedAs] = (0, _resolvehref.resolveHref)(router, hrefProp, true);\n        return {\n            href: resolvedHref,\n            as: asProp ? (0, _resolvehref.resolveHref)(router, asProp) : resolvedAs || resolvedHref\n        };\n    }, [\n        router,\n        hrefProp,\n        asProp\n    ]);\n    const previousHref = _react.default.useRef(href);\n    const previousAs = _react.default.useRef(as);\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (legacyBehavior) {\n        if (process.env.NODE_ENV === 'development') {\n            if (onClick) {\n                console.warn('\"onClick\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link');\n            }\n            if (onMouseEnterProp) {\n                console.warn('\"onMouseEnter\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link');\n            }\n            try {\n                child = _react.default.Children.only(children);\n            } catch (err) {\n                if (!children) {\n                    throw Object.defineProperty(new Error(\"No children were passed to <Link> with `href` of `\" + hrefProp + \"` but one child is required https://nextjs.org/docs/messages/link-no-children\"), \"__NEXT_ERROR_CODE\", {\n                        value: \"E320\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                throw Object.defineProperty(new Error(\"Multiple children were passed to <Link> with `href` of `\" + hrefProp + \"` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children\" + (typeof window !== 'undefined' ? \" \\nOpen your browser's console to view the Component stack trace.\" : '')), \"__NEXT_ERROR_CODE\", {\n                    value: \"E266\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        } else {\n            child = _react.default.Children.only(children);\n        }\n    } else {\n        if (process.env.NODE_ENV === 'development') {\n            if ((children == null ? void 0 : children.type) === 'a') {\n                throw Object.defineProperty(new Error('Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E209\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        }\n    }\n    const childRef = legacyBehavior ? child && typeof child === 'object' && child.ref : forwardedRef;\n    const [setIntersectionRef, isVisible, resetVisible] = (0, _useintersection.useIntersection)({\n        rootMargin: '200px'\n    });\n    const setIntersectionWithResetRef = _react.default.useCallback((el)=>{\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n            resetVisible();\n            previousAs.current = as;\n            previousHref.current = href;\n        }\n        setIntersectionRef(el);\n    }, [\n        as,\n        href,\n        resetVisible,\n        setIntersectionRef\n    ]);\n    const setRef = (0, _usemergedref.useMergedRef)(setIntersectionWithResetRef, childRef);\n    // Prefetch the URL if we haven't already and it's visible.\n    _react.default.useEffect(()=>{\n        // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n        if (process.env.NODE_ENV !== 'production') {\n            return;\n        }\n        if (!router) {\n            return;\n        }\n        // If we don't need to prefetch the URL, don't do prefetch.\n        if (!isVisible || !prefetchEnabled) {\n            return;\n        }\n        // Prefetch the URL.\n        prefetch(router, href, as, {\n            locale\n        });\n    }, [\n        as,\n        href,\n        isVisible,\n        locale,\n        prefetchEnabled,\n        router == null ? void 0 : router.locale,\n        router\n    ]);\n    const childProps = {\n        ref: setRef,\n        onClick (e) {\n            if (process.env.NODE_ENV !== 'production') {\n                if (!e) {\n                    throw Object.defineProperty(new Error('Component rendered inside next/link has to pass click event to \"onClick\" prop.'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E312\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n            }\n            if (!legacyBehavior && typeof onClick === 'function') {\n                onClick(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onClick === 'function') {\n                child.props.onClick(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (e.defaultPrevented) {\n                return;\n            }\n            linkClicked(e, router, href, as, replace, shallow, scroll, locale, onNavigate);\n        },\n        onMouseEnter (e) {\n            if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n                onMouseEnterProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === 'function') {\n                child.props.onMouseEnter(e);\n            }\n            if (!router) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            });\n        },\n        onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START ? undefined : function onTouchStart(e) {\n            if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n                onTouchStartProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onTouchStart === 'function') {\n                child.props.onTouchStart(e);\n            }\n            if (!router) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            });\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user.\n    // If the url is absolute, we can bypass the logic to prepend the domain and locale.\n    if ((0, _utils.isAbsoluteUrl)(as)) {\n        childProps.href = as;\n    } else if (!legacyBehavior || passHref || child.type === 'a' && !('href' in child.props)) {\n        const curLocale = typeof locale !== 'undefined' ? locale : router == null ? void 0 : router.locale;\n        // we only render domain locales if we are currently on a domain locale\n        // so that locale links are still visitable in development/preview envs\n        const localeDomain = (router == null ? void 0 : router.isLocaleDomain) && (0, _getdomainlocale.getDomainLocale)(as, curLocale, router == null ? void 0 : router.locales, router == null ? void 0 : router.domainLocales);\n        childProps.href = localeDomain || (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(as, curLocale, router == null ? void 0 : router.defaultLocale));\n    }\n    if (legacyBehavior) {\n        if (process.env.NODE_ENV === 'development') {\n            (0, _erroronce.errorOnce)('`legacyBehavior` is deprecated and will be removed in a future ' + 'release. A codemod is available to upgrade your components:\\n\\n' + 'npx @next/codemod@latest new-link .\\n\\n' + 'Learn more: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#remove-a-tags-from-link-components');\n        }\n        return /*#__PURE__*/ _react.default.cloneElement(child, childProps);\n    }\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(\"a\", {\n        ...restProps,\n        ...childProps,\n        children: children\n    });\n});\nconst LinkStatusContext = /*#__PURE__*/ (0, _react.createContext)({\n    // We do not support link status in the Pages Router, so we always return false\n    pending: false\n});\nconst useLinkStatus = ()=>{\n    // This behaviour is like React's useFormStatus. When the component is not under\n    // a <form> tag, it will get the default value, instead of throwing an error.\n    return (0, _react.useContext)(LinkStatusContext);\n};\nconst _default = Link;\n\nif ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', { value: true });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}\n\n//# sourceMappingURL=link.js.map"],"names":["useLinkStatus","_interop_require_wildcard","require$$0","require$$1","_react","_","require$$2","_resolvehref","require$$3","_islocalurl","require$$4","_formaturl","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","prefetch","router","href","as","options","window","isLocalURL","bypassPrefetchedCheck","locale","prefetchedKey","prefetched","has","add","catch","err","process","env","NODE_ENV","eventTarget","event","currentTarget","target","getAttribute","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","linkClicked","navigate","e","replace","shallow","scroll","onNavigate","nodeName","toUpperCase","isModifiedEvent","hasAttribute","preventDefault","location","isDefaultPrevented","routerScroll","formatStringOrUrl","urlObjOrString","formatUrl","Link","default","forwardRef","LinkComponent","props","forwardedRef","children","hrefProp","asProp","childrenProp","prefetchProp","passHref","onClick","onMouseEnter","onMouseEnterProp","onTouchStart","onTouchStartProp","legacyBehavior","restProps","_jsxruntime","jsx","useContext","_routercontextsharedruntime","RouterContext","createPropError","args","Object","defineProperty","Error","key","expected","actual","value","enumerable","configurable","requiredPropsGuard","requiredProps","keys","forEach","optionalProps","optionalPropsGuard","valType","useMemo"],"mappings":"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","x_google_ignoreList":[0]}