{"version":3,"file":"app-paths.js","sources":["../../../../../../../../../node_modules/next/dist/shared/lib/router/utils/app-paths.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    normalizeAppPath: null,\n    normalizeRscURL: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    normalizeAppPath: function() {\n        return normalizeAppPath;\n    },\n    normalizeRscURL: function() {\n        return normalizeRscURL;\n    }\n});\nconst _ensureleadingslash = require(\"../../page-path/ensure-leading-slash\");\nconst _segment = require(\"../../segment\");\nfunction normalizeAppPath(route) {\n    return (0, _ensureleadingslash.ensureLeadingSlash)(route.split('/').reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if ((0, _segment.isGroupSegment)(segment)) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment[0] === '@') {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === 'page' || segment === 'route') && index === segments.length - 1) {\n            return pathname;\n        }\n        return pathname + \"/\" + segment;\n    }, ''));\n}\nfunction normalizeRscURL(url) {\n    return url.replace(/\\.rsc($|\\?)/, // $1 ensures `?` is preserved\n    '$1');\n}\n\n//# sourceMappingURL=app-paths.js.map"],"names":["_export","target","all","exports","normalizeAppPath","normalizeRscURL","_ensureleadingslash","require$$0","_segment","require$$1","route","ensureLeadingSlash","split","reduce","pathname","segment","index","segments","isGroupSegment"],"mappings":";;;;;;;;;;;;;;;oBA8CcA,CAAAC,MAAA,EAAAC,GAAA,EAAA;;;;;AAnCd;AACA,IAAA,OAAA,CAAAC,OAAM,EAAA;AAEC,MAAA,gBAAA,EAAA,YAAA;AACH,QAAA,OAAAC,gBAAA;;AAEC,MAAA,eAAA,EAAA,YAAA;AAEL,QAAA,OAAAC,eAA8B;;;AAGxBC,IAAAA,MAAAA,mBAAA,GAAAC,4BAAA,EAAA;AAEGC,IAAAA,MAAAA,QAAA,GAAAC,iBAAA,EAAA;AACLL,IAAAA,SAAAA,gBAAWA,CAAAM,KAAA,EAAA;AACf,MAAA,OAAA,IAAAJ,mBAAA,CAAAK,kBAAA,EAAAD,KAAA,CAAAE,KAAA,CAAA,GAAA,CAAA,CAAAC,MAAA,CAAA,CAAAC,QAAA,EAAAC,OAAA,EAAAC,KAAA,EAAAC,QAAA,KAAA;AACQ;AAER,QAAA,IAAA,CAAAF,OAAA,EAAA;AAEQ,UAAA,OAAAD,QAAQ;;AAIhB;AAEA,QAAA,IAAA,IAAAN,QAAA,CAAAU,cAAA,EAAAH,OAAA,CAAA,EAAA;AACA,UAAA,OAAAD,QAAA;AAEA;AAMc;QACd,WAAS,CAAA,CACT,CAAA,KAAA,GAAA,EAAA;AAEA,UAAA,OAAAA,QAAA;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}