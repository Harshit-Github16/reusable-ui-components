{"version":3,"file":"use-intersection.js","sources":["../../../../../../node_modules/next/dist/client/use-intersection.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"useIntersection\", {\n    enumerable: true,\n    get: function() {\n        return useIntersection;\n    }\n});\nconst _react = require(\"react\");\nconst _requestidlecallback = require(\"./request-idle-callback\");\nconst hasIntersectionObserver = typeof IntersectionObserver === 'function';\nconst observers = new Map();\nconst idList = [];\nfunction createObserver(options) {\n    const id = {\n        root: options.root || null,\n        margin: options.rootMargin || ''\n    };\n    const existing = idList.find((obj)=>obj.root === id.root && obj.margin === id.margin);\n    let instance;\n    if (existing) {\n        instance = observers.get(existing);\n        if (instance) {\n            return instance;\n        }\n    }\n    const elements = new Map();\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const callback = elements.get(entry.target);\n            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n            if (callback && isVisible) {\n                callback(isVisible);\n            }\n        });\n    }, options);\n    instance = {\n        id,\n        observer,\n        elements\n    };\n    idList.push(id);\n    observers.set(id, instance);\n    return instance;\n}\nfunction observe(element, callback, options) {\n    const { id, observer, elements } = createObserver(options);\n    elements.set(element, callback);\n    observer.observe(element);\n    return function unobserve() {\n        elements.delete(element);\n        observer.unobserve(element);\n        // Destroy observer when there's nothing left to watch:\n        if (elements.size === 0) {\n            observer.disconnect();\n            observers.delete(id);\n            const index = idList.findIndex((obj)=>obj.root === id.root && obj.margin === id.margin);\n            if (index > -1) {\n                idList.splice(index, 1);\n            }\n        }\n    };\n}\nfunction useIntersection(param) {\n    let { rootRef, rootMargin, disabled } = param;\n    const isDisabled = disabled || !hasIntersectionObserver;\n    const [visible, setVisible] = (0, _react.useState)(false);\n    const elementRef = (0, _react.useRef)(null);\n    const setElement = (0, _react.useCallback)((element)=>{\n        elementRef.current = element;\n    }, []);\n    (0, _react.useEffect)(()=>{\n        if (hasIntersectionObserver) {\n            if (isDisabled || visible) return;\n            const element = elementRef.current;\n            if (element && element.tagName) {\n                const unobserve = observe(element, (isVisible)=>isVisible && setVisible(isVisible), {\n                    root: rootRef == null ? void 0 : rootRef.current,\n                    rootMargin\n                });\n                return unobserve;\n            }\n        } else {\n            if (!visible) {\n                const idleCallback = (0, _requestidlecallback.requestIdleCallback)(()=>setVisible(true));\n                return ()=>(0, _requestidlecallback.cancelIdleCallback)(idleCallback);\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        isDisabled,\n        rootMargin,\n        rootRef,\n        visible,\n        elementRef.current\n    ]);\n    const resetVisible = (0, _react.useCallback)(()=>{\n        setVisible(false);\n    }, []);\n    return [\n        setElement,\n        visible,\n        resetVisible\n    ];\n}\n\nif ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', { value: true });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}\n\n//# sourceMappingURL=use-intersection.js.map"],"names":["defineProperty","exports","value","useIntersection","_react","require$$0","_requestidlecallback","require$$1","hasIntersectionObserver","IntersectionObserver","Map","idList","createObserver","options","id","root","margin","rootMargin","existing","find","obj","observers","get","instance","elements","observer","entries","forEach","entry","callback","target","isVisible","isIntersecting","intersectionRatio","push","set","observe","element","unobserve","delete","size","disconnect","index","findIndex","splice","param","disabled","setVisible","useState","useRef","useCallback","current","useEffect","elementRef"],"mappings":"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","x_google_ignoreList":[0]}