import { __exports as appPaths } from '../../../../../../../_virtual/app-paths.js';
import { __require as requireEnsureLeadingSlash } from '../../page-path/ensure-leading-slash.js';
import { __require as requireSegment } from '../../segment.js';

var hasRequiredAppPaths;
function requireAppPaths() {
  if (hasRequiredAppPaths) return appPaths;
  hasRequiredAppPaths = 1;
  (function (exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports, {
      normalizeAppPath: function () {
        return normalizeAppPath;
      },
      normalizeRscURL: function () {
        return normalizeRscURL;
      }
    });
    const _ensureleadingslash = requireEnsureLeadingSlash();
    const _segment = requireSegment();
    function normalizeAppPath(route) {
      return (0, _ensureleadingslash.ensureLeadingSlash)(route.split('/').reduce((pathname, segment, index, segments) => {
        // Empty segments are ignored.
        if (!segment) {
          return pathname;
        }
        // Groups are ignored.
        if ((0, _segment.isGroupSegment)(segment)) {
          return pathname;
        }
        // Parallel segments are ignored.
        if (segment[0] === '@') {
          return pathname;
        }
        // The last segment (if it's a leaf) should be ignored.
        if ((segment === 'page' || segment === 'route') && index === segments.length - 1) {
          return pathname;
        }
        return pathname + "/" + segment;
      }, ''));
    }
    function normalizeRscURL(url) {
      return url.replace(/\.rsc($|\?)/,
      // $1 ensures `?` is preserved
      '$1');
    }
  })(appPaths);
  return appPaths;
}

export { requireAppPaths as __require };
//# sourceMappingURL=app-paths.js.map
