{"version":3,"file":"querystring.js","sources":["../../../../../../../../../node_modules/next/dist/shared/lib/router/utils/querystring.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    assign: null,\n    searchParamsToUrlQuery: null,\n    urlQueryToSearchParams: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    assign: function() {\n        return assign;\n    },\n    searchParamsToUrlQuery: function() {\n        return searchParamsToUrlQuery;\n    },\n    urlQueryToSearchParams: function() {\n        return urlQueryToSearchParams;\n    }\n});\nfunction searchParamsToUrlQuery(searchParams) {\n    const query = {};\n    for (const [key, value] of searchParams.entries()){\n        const existing = query[key];\n        if (typeof existing === 'undefined') {\n            query[key] = value;\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            query[key] = [\n                existing,\n                value\n            ];\n        }\n    }\n    return query;\n}\nfunction stringifyUrlQueryParam(param) {\n    if (typeof param === 'string') {\n        return param;\n    }\n    if (typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {\n        return String(param);\n    } else {\n        return '';\n    }\n}\nfunction urlQueryToSearchParams(query) {\n    const searchParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(query)){\n        if (Array.isArray(value)) {\n            for (const item of value){\n                searchParams.append(key, stringifyUrlQueryParam(item));\n            }\n        } else {\n            searchParams.set(key, stringifyUrlQueryParam(value));\n        }\n    }\n    return searchParams;\n}\nfunction assign(target) {\n    for(var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        searchParamsList[_key - 1] = arguments[_key];\n    }\n    for (const searchParams of searchParamsList){\n        for (const key of searchParams.keys()){\n            target.delete(key);\n        }\n        for (const [key, value] of searchParams.entries()){\n            target.append(key, value);\n        }\n    }\n    return target;\n}\n\n//# sourceMappingURL=querystring.js.map"],"names":["urlQueryToSearchParams","searchParamsToUrlQuery","searchParams","key","value","entries","existing","query","Array","isArray","stringifyUrlQueryParam","param","isNaN","URLSearchParams","Object","item","append","set","assign","target","_len","arguments","length","searchParamsList","_key"],"mappings":";;;;;;;;;;;;;;;AAyBE,OAAA,CAAA;;;;;;;;;AAzBU,MAAA,sBAAA,EAAA,YAAA;AACZ,QAAA,OAAOA,sBAAwB;;;AAG9BC,IAAAA,SAAAA,sBAAAA,CAAAC,YAAA,EAAA;AAAA,MAAA,MAAA,KAAA,GAAA,EAAA;AAAA,MAAA,KAAA,MAAA,CAAAC,GAAA,EAAAC,KAAA,CAAAF,IAAAA,YAAA,CAAAG,OAAA,EAAA,EAAA;cAAAC,QAAA,GAAAC,KAAA,CAAAJ,GAAA,CAAA;AACD,QAAA,IAAA,OAAAG,QAAA,KAAA,WAAA,EAAA;UACAC,KAAA,CAAAJ,GAAA,CAAA,GAAAC,KAAA;AACA,SAAA,MAAAI,IAAAA,KAAA,CAAAC,OAAA,CAAAH,QAAA,CAAA,EAAA;;AAGQ,SAAA,MAAA;AACAC,UAAAA,KAAA,CAAAJ,GAAA,CAAA,GAAgB,CACbG,QAAA,EACXF,KAAA,CAGU;AAGN;AACJ;aACKG,KAAA;;AAEL,IAAA,SAAAG,uBAAAC,KAAA,EAAA;MAEE,IAAA,OAAAA,KAAA,KAAA,QAAA,EAAA;AACO,QAAA,OAAAA,KAAA;AACT;UACA,OAASA,KAAA,KAAY,QAAM,IAAA,CAAAC,KAAA,CAAAD,KAAA,YAAAA,KAAA,KAAA,SAAA,EAAA;qBACL,CAAAA,KAAA,CAAA;;AAEtB,QAAA,OAAA,EAAA;;;AAGAX,IAAAA,SAAAA,sBAAAA,CAAAO,KAAA,EAAA;MACA,MAAAL,YAAA,OAAAW,eAAA,EAAA;MACA,KAAA,MAAA,CAAAV,GAAA,EAAAC,KAAA,KAAAU,MAAA,CAAAT,OAAA,CAAAE,KAAA,CAAA,EAAA;;UAGA,KACA,MAAAQ,IAAA,IAAAX,KAAA,EAAA;AACAF,YAAAA,YAAA,CAAAc,MAAA,CAAAb,GAAA,EAAAO,sBAAA,CAAAK,IAAA,CAAA,CAAA;AAAA;;AAESb,UAAAA,YAAA,CAAAe,GAAA,CAAAd,GAAA,EAAAO,sBAA8B,CAAAN,KAAA,CAAA,CAAA;AACvC;;aAEAF,YAAA;;AAGAgB,IAAAA,SAAAA,MAAAA,CAAAC,MAAW,EAAA;WACX,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,gBAAA,OAAAf,KAAA,CAAAY,IAAA,GAAAA,CAAAA,GAAAA,IAAA,WAAAI,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA,EAAA,EAAA;AACAD,QAAAA,gBAAA,CAAAC,IAAA,GAAAH,CAAAA,CAAAA,GAAAA,SAAA,CAAAG,IAAA,CAAA;AAEA;MACA,KAAAtB,MAAAA,YAAA,IAAAqB,gBAAA,EAAA;;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}