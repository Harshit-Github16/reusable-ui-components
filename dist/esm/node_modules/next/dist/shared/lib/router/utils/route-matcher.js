import { __exports as routeMatcher } from '../../../../../../../_virtual/route-matcher.js';
import { __require as requireUtils } from '../../utils.js';

var hasRequiredRouteMatcher;
function requireRouteMatcher() {
  if (hasRequiredRouteMatcher) return routeMatcher;
  hasRequiredRouteMatcher = 1;
  (function (exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "getRouteMatcher", {
      enumerable: true,
      get: function () {
        return getRouteMatcher;
      }
    });
    const _utils = requireUtils();
    function getRouteMatcher(param) {
      let {
        re,
        groups
      } = param;
      return pathname => {
        const routeMatch = re.exec(pathname);
        if (!routeMatch) return false;
        const decode = param => {
          try {
            return decodeURIComponent(param);
          } catch (e) {
            throw Object.defineProperty(new _utils.DecodeError('failed to decode param'), "__NEXT_ERROR_CODE", {
              value: "E528",
              enumerable: false,
              configurable: true
            });
          }
        };
        const params = {};
        for (const [key, group] of Object.entries(groups)) {
          const match = routeMatch[group.pos];
          if (match !== undefined) {
            if (group.repeat) {
              params[key] = match.split('/').map(entry => decode(entry));
            } else {
              params[key] = decode(match);
            }
          }
        }
        return params;
      };
    }
  })(routeMatcher);
  return routeMatcher;
}

export { requireRouteMatcher as __require };
//# sourceMappingURL=route-matcher.js.map
